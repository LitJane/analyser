from legal_docs import deprecated, org_types, CharterDocument, make_soft_attention_vector
from patterns import AbstractPatternFactoryLowCase


class CharterPatternFactory(AbstractPatternFactoryLowCase):
  """
  üè≠
  """

  def __init__(self, embedder):
    AbstractPatternFactoryLowCase.__init__(self, embedder)

    self._build_head_patterns()
    self._build_order_patterns()
    self._build_sum_margin_extraction_patterns()
    self._build_sum_patterns()

    self._build_ner_patterns()

    self.embedd()

    self.headlines = ['head.directors', 'head.all', 'head.gen', 'head.pravlenie', 'name']

  def _build_head_patterns(self):
    def cp(name, tuples):
      return self.create_pattern(name, tuples)

    head_prfx = "—Å—Ç–∞—Ç—å—è 0"

    cp('headline.name.1', ('–ü–æ–ª–Ω–æ–µ', '—Ñ–∏—Ä–º–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–æ–±—â–µ—Å—Ç–≤–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ:'))
    cp('headline.name.2', ('', '–û–ë–©–ò–ï –ü–û–õ–û–ñ–ï–ù–ò–Ø', ''))
    cp('headline.name.3', ('', '—Ñ–∏—Ä–º–µ–Ω–Ω–æ–µ', ''))
    cp('headline.name.4', ('', '—Ä—É—Å—Å–∫–æ–º', ''))
    cp('headline.name.5', ('', '—è–∑—ã–∫–µ', ''))
    cp('headline.name.6', ('', '–ø–æ–ª–Ω–æ–µ', ''))

    cp('headline.head.all.1', (head_prfx, '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ –æ–±—â–µ–≥–æ —Å–æ–±—Ä–∞–Ω–∏—è –∞–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤', ''))
    cp('headline.head.all.2', (head_prfx, '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ –æ–±—â–µ–≥–æ —Å–æ–±—Ä–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', '–æ–±—â–µ—Å—Ç–≤–∞'))
    cp('headline.head.all.3', (head_prfx, '—Å–æ–±—Ä–∞–Ω–∏–µ –∞–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤\n', ''))

    cp('headline.head.all.4', ('', '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏', ''))
    cp('headline.head.all.5', ('', '—Å–æ–±—Ä–∞–Ω–∏—è', ''))
    cp('headline.head.all.6', ('', '—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', ''))
    cp('headline.head.all.7', ('', '–∞–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤', ''))

    cp('headline.head.directors.1', (head_prfx, '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è —Å–æ–≤–µ—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤', '–æ–±—â–µ—Å—Ç–≤–∞'))
    cp('headline.head.directors.2', ('', '—Å–æ–≤–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ –æ–±—â–µ—Å—Ç–≤–∞', ''))
    cp('headline.head.directors.3', ('', '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏', ''))
    cp('headline.head.directors.4', ('', '—Å–æ–≤–µ—Ç–∞', ''))
    cp('headline.head.directors.5', ('', '–¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤', ''))

    cp('headline.head.pravlenie.1', (head_prfx, '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ –ø—Ä–∞–≤–ª–µ–Ω–∏—è', ''))
    cp('headline.head.pravlenie.2', ('', '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏', ''))
    cp('headline.head.pravlenie.3', ('', '–ø—Ä–∞–≤–ª–µ–Ω–∏—è', ''))
    #     cp('d_head_pravlenie.2', ('', '–æ–±—â–µ—Å—Ç–≤–∞', ''))

    cp('headline.head.gen.1', (head_prfx, '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞', ''))
    cp('headline.head.gen.2', ('', '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏', ''))
    cp('headline.head.gen.3', ('', '–≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ', ''))
    cp('headline.head.gen.4', ('', '–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞', ''))

  def _build_sum_patterns(self):
    def cp(name, tuples):
      return self.create_pattern(name, tuples)

    suffix = '–º–ª–Ω. —Ç—ã—Å. –º–∏–ª–ª–∏–æ–Ω–æ–≤ —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π –¥–æ–ª–ª–∞—Ä–æ–≤ –∫–æ–ø–µ–µ–∫ –µ–≤—Ä–æ'
    prefix = '—Ä–µ—à–µ–Ω–∏–π –æ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–¥–µ–ª–æ–∫ '

    cp('sum_max1', (prefix + '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '–Ω–µ –±–æ–ª–µ–µ 0', suffix))
    cp('sum_max2', (prefix + '—Ü–µ–Ω–∞', '–Ω–µ –±–æ–ª—å—à–µ 0', suffix))
    cp('sum_max3', (prefix + '—Å—Ç–æ–∏–º–æ—Å—Ç—å <', '0', suffix))
    cp('sum_max4', (prefix + '—Ü–µ–Ω–∞ –º–µ–Ω–µ–µ', '0', suffix))
    cp('sum_max5', (prefix + '—Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å', '0', suffix))
    cp('sum_max6', (prefix + '–æ–±—â–∞—è —Å—É–º–º–∞ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å', '0', suffix))
    cp('sum_max7', (prefix + '–ª–∏–º–∏—Ç —Å–æ–≥–ª–∞—à–µ–Ω–∏—è', '0', suffix))
    cp('sum_max8', (prefix + '–≤–µ—Ä—Ö–Ω–∏–π –ª–∏–º–∏—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏', '0', suffix))
    cp('sum_max9', (prefix + '–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞', '0', suffix))

  def _build_sum_margin_extraction_patterns(self):
    suffix = '–º–ª–Ω. —Ç—ã—Å. –º–∏–ª–ª–∏–æ–Ω–æ–≤ —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π –¥–æ–ª–ª–∞—Ä–æ–≤ –∫–æ–ø–µ–µ–∫ –µ–≤—Ä–æ'
    prefix = '—Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ —Å–¥–µ–ª–æ–∫ '

    # less than
    self.create_pattern('sum__lt_1', (prefix + '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '–Ω–µ –±–æ–ª–µ–µ 0', suffix))
    self.create_pattern('sum__lt_2', (prefix + '—Ü–µ–Ω–∞', '–Ω–µ –±–æ–ª—å—à–µ 0', suffix))
    self.create_pattern('sum__lt_3', (prefix + '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '< 0', suffix))
    self.create_pattern('sum__lt_4', (prefix + '—Ü–µ–Ω–∞', '–º–µ–Ω–µ–µ 0', suffix))
    self.create_pattern('sum__lt_4.1', (prefix + '—Ü–µ–Ω–∞', '–Ω–∏–∂–µ 0', suffix))
    self.create_pattern('sum__lt_5', (prefix + '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '–Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 0', suffix))
    self.create_pattern('sum__lt_6', (prefix + '–ª–∏–º–∏—Ç —Å–æ–≥–ª–∞—à–µ–Ω–∏—è', '0', suffix))
    self.create_pattern('sum__lt_7', (prefix + '–≤–µ—Ä—Ö–Ω–∏–π –ª–∏–º–∏—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏', '0', suffix))
    self.create_pattern('sum__lt_8', (prefix, '–º–∞–∫—Å–∏–º—É–º 0', suffix))
    self.create_pattern('sum__lt_9', (prefix, '–¥–æ 0', suffix))
    self.create_pattern('sum__lt_10', (prefix, '–Ω–æ –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â—É—é 0', suffix))
    self.create_pattern('sum__lt_11', (prefix, '—Å–æ–≤–æ–∫—É–ø–Ω–æ–µ –ø–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0', suffix))

    # greather than
    self.create_pattern('sum__gt_1', (prefix + '—Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç', '–±–æ–ª–µ–µ 0', suffix))
    self.create_pattern('sum__gt_2', (prefix + '', '–ø—Ä–µ–≤—ã—à–∞–µ—Ç 0', suffix))
    self.create_pattern('sum__gt_3', (prefix + '', '—Å–≤—ã—à–µ 0', suffix))
    self.create_pattern('sum__gt_4', (prefix + '', '—Å–¥–µ–ª–∫–∞ –∏–º–µ–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å, —Ä–∞–≤–Ω—É—é –∏–ª–∏ –ø—Ä–µ–≤—ã—à–∞—é—â—É—é 0', suffix))

  @deprecated
  def _build_order_patterns____OLD(self):
    def cp(name, tuples):
      return self.create_pattern(name, tuples)

    cp('d_order_1', ('–ü–æ—Ä—è–¥–æ–∫', '–æ–¥–æ–±—Ä–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫', '–≤ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö –∏–º–µ–µ—Ç—Å—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å'))
    cp('d_order_2', ('', '–ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π', '–æ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–¥–µ–ª–æ–∫'))
    cp('d_order_3',
       ('', '–æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è', '–∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è –∫–∞–∫–æ–π-–ª–∏–±–æ —Å–¥–µ–ª–∫–∏ –û–±—â–µ—Å—Ç–≤–∞'))
    cp('d_order_4', ('', '–°–¥–µ–ª–∫–∏', '—Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–≤–Ω–∞ –∏–ª–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç'))
    cp('d_order_5', ('', '–°–¥–µ–ª–∫–∏', '—Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ–Ω–µ–µ'))

  def _build_order_patterns(self):
    def cp(name, tuples):
      return self.create_pattern(name, tuples)

    prefix = '–ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è –æ —Å–æ–≥–ª–∞—Å–∏–∏ –Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ –∏–ª–∏ –æ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏–∏'

    cp('d_order_4', (prefix, 'c–¥–µ–ª–∫–∏', ', —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–≤–Ω–∞ –∏–ª–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç'))
    cp('d_order_5', (prefix, 'c–¥–µ–ª–∫–∏', ', —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ–Ω–µ–µ'))

  def _build_ner_patterns(self):
    def cp(name, tuples):
      return self.create_pattern(name, tuples)

    for o_type in org_types.keys():
      cp(o_type, ('', org_types[o_type], '"'))

    cp('ner_org.1', ('–ü–æ–ª–Ω–æ–µ', '—Ñ–∏—Ä–º–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–æ–±—â–µ—Å—Ç–≤–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ:'))

    cp('ner_org.6', ('', '–û–ë–©–ò–ï –ü–û–õ–û–ñ–ï–ù–ò–Ø', ''))

    cp('ner_org.2', ('', '—Ñ–∏—Ä–º–µ–Ω–Ω–æ–µ', ''))
    cp('ner_org.3', ('', '—Ä—É—Å—Å–∫–æ–º', ''))
    cp('ner_org.4', ('', '—è–∑—ã–∫–µ', ''))
    cp('ner_org.5', ('', '–ø–æ–ª–Ω–æ–µ', ''))

    cp('nerneg_1', ('–æ–±—â–µ—Å—Ç–≤–æ –∏–º–µ–µ—Ç', '–ø–µ—á–∞—Ç—å', ''))
    cp('nerneg_2', ('', '—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ', ''))
    cp('nerneg_3', ('–Ω–∞', '–∞–Ω–≥–ª–∏–π—Å–∫–æ–º', '—è–∑—ã–∫–µ'))

  def _build_org_type_attention_vector(self, subdoc: CharterDocument):


    attention_vector_neg = make_soft_attention_vector(subdoc, 'nerneg_1', blur=80)
    attention_vector_neg = 1 + (1 - attention_vector_neg)  # normalize(attention_vector_neg * -1)
    return attention_vector_neg