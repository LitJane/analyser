on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Publish new release

jobs:
  build:
    name: Upload Release Asset

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user --upgrade setuptools wheel
      - name: Create wheel # This would actually build your project, using zip for an example artifact
        run: |
          python setup.py sdist bdist_wheel
      - name: Zip build # This would actually build your project, using zip for an example artifact
        run: |
          zip -r -j release.zip dist
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

#          body: |
#            Changes in this Release:
#            TODO
#            Actor: ${{ github.actor }}
#            Tag: ${{ steps.branch_name.outputs.SOURCE_TAG }}
#            Branch: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
#            Name: ${{ steps.branch_name.outputs.SOURCE_NAME }}

          draft: false
          prerelease: false

      - name: Upload package
        id: upload-release-asset1
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release.zip
          asset_name: release-${{ steps.branch_name.outputs.SOURCE_TAG }}.zip
          asset_content_type: application/zip